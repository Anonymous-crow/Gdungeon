name: Build Documentation

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"
      - "rc*"

jobs:
  build-docs:
    # if: contains('refs/heads/main', github.ref)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: huh
        run: |
          echo "${{ github.ref }} and $GITHUB_REF"
          echo whuh
          echo "::set-output name=test::${{ github.ref }}"

      - name: whuh
        if: contains(steps.huh.outputs.test, 'refs/heads/main')
        run: echo "should work"

      - name: Set reusable strings
        # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: install sqlite3
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: sqlite3 libsqlite3 libsqlite3-dev doxygen
          version: 4.0
          # execute_install_scripts: true
      
      - name: Cache Docs Deps
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip' # caching pip dependencies

      - name: Add Docs Deps
        run: pip install -r requirements.txt

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-output-dir }}
          -DCMAKE_CXX_COMPILER=g++
          -DCMAKE_C_COMPILER=gcc
          -DCMAKE_BUILD_TYPE=Release
          -DBUILD_DOCS=ON
          -S ${{ github.workspace }}

      - name: Build Docs
        run: >
          cmake --build ${{ steps.strings.outputs.build-output-dir }} 
          --config Release --target docs

      - name: Move Docs
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ github.workspace }}/docs/build/html

  deploy-docs:
    if: contains('refs/heads/main', github.ref)
    # Add a dependency to the build job
    needs: build-docs

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action